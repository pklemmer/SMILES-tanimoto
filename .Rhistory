names(pc_eup)[2] <- "SMILES"
names(pc_agr)[1] <- "PREFERRED NAME"
names(pc_agr)[2] <- "SMILES"
#Renaming columns to be consistent across datasets
df_master <- rbind(epapcs, pc_eup, pc_agr)
molA <- "[H][C@@]12COC3=C(C=C(OC)C(OC)=C3)[C@]1([H])C(=O)C1=CC=C3O[C@H](CC3=C1O2)C(C)=C"
#This is the SMILES for Rotenone; defining molA as another SMILES value allows for comparisons of all kinds of pesticides.
df_master <- data.frame(lapply(df_master, as.character), stringsAsFactors = FALSE)
#For some reason, the df is seen as tables, not characters. This function forces all values to be characters
Tanimoto_coefficient <- vector("numeric",nrow(df_master))
#Preparing a container for the calculated coefficient
for(row in 1:nrow(df_master)){
calculation<- ms.compute(molA, df_master[row,"SMILES"], standardize = TRUE)
#This line repeats ms.compute for each row of df_smiles so that a comparison between Rotenone (=molA) and all other (available) pesticides (="SMILES") is made
#RxnSim also allows comparisons between each pesticide in a list by using the ms.compute.sim.matrix function.
Tanimoto_coefficient[row] <- calculation
}
df_master <- cbind (df_master,Tanimoto_coefficient)
#Tanimoto_coefficient is added to the df_smiles for easier viewing
df_master_sorted <- df_master[order(-df_master$Tanimoto_coefficient),]
View(df_master_sorted)
write.csv(df_master_sorted, file = "Tanimoto-coefficient-Rotenone-1.csv")
#Exports df_smiles_sorted to a .csv file with observations sorted in descending order according to their Tanimoto coefficient.
preferred_name <- df_master[,1]
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))
p1
install.packages("RxnSim")
install.packages("dplyr")
install.packages("dplyr")
df_master_sorted <- df_master_sorted[!(duplicated(df_master_sorted)),]
View(df_master_sorted)
df_master_sorted <- unique(df_master_sorted[,2])
View(df_master_sorted)
class(df_master_sorted)
df_master_sorted <- unique(df_master_sorted)
View(df_master_sorted)
df_master_sorted <- unique(df_master_sorted[,1:2])
View(df_master_sorted)
df_master_sorted <- unique(df_master_sorted[,2])
View(df_master_sorted)
#Tanimoto_coefficient is added to the df_smiles for easier viewing
df_master_sorted <- df_master[order(-df_master$Tanimoto_coefficient),]
df_master_sorted <- unique(df_master_sorted[,2])
View(df_master_sorted)
#Tanimoto_coefficient is added to the df_smiles for easier viewing
df_master_sorted <- df_master[order(-df_master$Tanimoto_coefficient),]
View(df_master_sorted)
df_master_sorted <- df_master_sorted[!duplicated(df_master_sorted$PREFERRED.NAME)]
View(df_master_sorted)
df_master_sorted <- df_master_sorted[!duplicated(df_master_sorted$"PREFERRED.NAME")]
View(df_master_sorted)
df_master_sorted <- df_master_sorted[!duplicated(df_master_sorted$"PREFERRED NAME")]
View(df_master_sorted)
#Tanimoto_coefficient is added to the df_smiles for easier viewing
df_master_sorted <- df_master[order(-df_master$Tanimoto_coefficient),]
#df_master_sorted <- df_master_sorted[!duplicated(df_master_sorted$"PREFERRED NAME")]
View(df_master_sorted)
df_master_sorted <- df_master_sorted[!duplicated(df_master_sorted(PREFERRED.NAME))]
View(df_master_sorted)
df_master_sorted <- df_master_sorted[!duplicated(df_master_sorted$PREFERRED.NAME), ]
View(df_master_sorted)
#Comments refer to the code above them.
#This script generates Tanimoto/Jaccard chemical similarity scores. Here, it is used to determine what molecules in the dataset are most chemically similar to a reference chemical.
sessionInfo()
install.packages("RxnSim")
#requires Rtools
install.packages("dplyr")
packages <- c("readr","dplyr","utils", "RxnSim", "ggplot2")
lapply(packages, library, character.only = TRUE)
#The previous 2 lines make it easier to load packages and libraries without needing to enter library() every time
epapcs <- read_csv("Chemical List EPAPCS-2022-04-11.csv")
pc_eup <- read_csv("PubChem_compound_list_ElW0fZMu9pLBvH6l_N03iWB0JxQ494ui8YeQ7uqWgu_qj74.csv")
pc_agr <- read_csv("PubChem_compound_list_o-QFwS1hSN1_90ruyJYDwlQ_i1-vbTmhQ4Qi7ViVMOxYjAw.csv")
#Importing datasets
epapcs <- select(epapcs, "PREFERRED NAME", "SMILES")
pc_eup <- select(pc_eup, "cmpdname", "isosmiles")
pc_agr <- select(pc_agr, "cmpdname", "isosmiles")
#Selecting relevant columns
epapcs <- na.omit(epapcs)
pc_eup <- na.omit(pc_eup)
pc_agr <- na.omit(pc_agr)
#Cleaning up dataset by removing all entries without SMILES
names(pc_eup)[1] <- "PREFERRED NAME"
names(pc_eup)[2] <- "SMILES"
names(pc_agr)[1] <- "PREFERRED NAME"
names(pc_agr)[2] <- "SMILES"
#Renaming columns to be consistent across datasets
df_master <- rbind(epapcs, pc_eup, pc_agr)
molA <- "[H][C@@]12COC3=C(C=C(OC)C(OC)=C3)[C@]1([H])C(=O)C1=CC=C3O[C@H](CC3=C1O2)C(C)=C"
#This is the SMILES for Rotenone; defining molA as another SMILES value allows for comparisons of all kinds of pesticides.
df_master <- data.frame(lapply(df_master, as.character), stringsAsFactors = FALSE)
#For some reason, the df is seen as tables, not characters. This function forces all values to be characters
Tanimoto_coefficient <- vector("numeric",nrow(df_master))
#Preparing a container for the calculated coefficient
for(row in 1:nrow(df_master)){
calculation<- ms.compute(molA, df_master[row,"SMILES"], standardize = TRUE)
#This line repeats ms.compute for each row of df_smiles so that a comparison between Rotenone (=molA) and all other (available) pesticides (="SMILES") is made
#RxnSim also allows comparisons between each pesticide in a list by using the ms.compute.sim.matrix function.
Tanimoto_coefficient[row] <- calculation
}
df_master <- cbind (df_master,Tanimoto_coefficient)
#Tanimoto_coefficient is added to the df_smiles for easier viewing1
df_master_sorted <- df_master[order(-df_master$Tanimoto_coefficient),]
df_master_sorted <- df_master_sorted[!duplicated(df_master_sorted$PREFERRED.NAME), ]
#Removing duplicates from the dataframe - as 3 datasets are combined, overlapping is unavoidable
#Duplicates are removed based on presence in the PREFERRED.NAME column since the SMILES formats differ slightly between datasets but are still correctly interpreted.
View(df_master_sorted)
write.csv(df_master_sorted, file = "Tanimoto-coefficient-Rotenone-1.csv")
#Exports df_smiles_sorted to a .csv file with observations sorted in descending order according to their Tanimoto coefficient.
preferred_name <- df_master[,1]
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))
p1
install.packages("dplyr")
calculation<- ms.compute(molA, df_master[row,"SMILES"], standardize = TRUE, explicitH = TRUE)
#Preparing a container for the calculated coefficient
for(row in 1:nrow(df_master)){
calculation<- ms.compute(molA, df_master[row,"SMILES"], standardize = TRUE, explicitH = TRUE)
#This line repeats ms.compute for each row of df_smiles so that a comparison between Rotenone (=molA) and all other (available) pesticides (="SMILES") is made
#RxnSim also allows comparisons between each pesticide in a list by using the ms.compute.sim.matrix function.
Tanimoto_coefficient[row] <- calculation
}
df_master <- cbind (df_master,Tanimoto_coefficient)
#Tanimoto_coefficient is added to the df_smiles for easier viewing1
df_master_sorted <- df_master[order(-df_master$Tanimoto_coefficient),]
df_master_sorted <- df_master_sorted[!duplicated(df_master_sorted$PREFERRED.NAME), ]
#Removing duplicates from the dataframe - as 3 datasets are combined, overlapping is unavoidable
#Duplicates are removed based on presence in the PREFERRED.NAME column since the SMILES formats differ slightly between datasets but are still correctly interpreted.
View(df_master_sorted)
#Removing duplicates from the dataframe - as 3 datasets are combined, overlapping is unavoidable
#Duplicates are removed based on presence in the PREFERRED.NAME column since the SMILES formats differ slightly between datasets but are still correctly interpreted.
View(df_master_sorted)
write.csv(df_master_sorted, file = "Tanimoto-coefficient-Rotenone-2.csv")
#Preparing a container for the calculated coefficient
for(row in 1:nrow(df_master)){
calculation<- ms.compute(molA, df_master[row,"SMILES"], standardize = TRUE, sim.method = "jaccard")
#This line repeats ms.compute for each row of df_smiles so that a comparison between Rotenone (=molA) and all other (available) pesticides (="SMILES") is made
#RxnSim also allows comparisons between each pesticide in a list by using the ms.compute.sim.matrix function.
Tanimoto_coefficient[row] <- calculation
}
df_master <- cbind (df_master,Tanimoto_coefficient)
#Tanimoto_coefficient is added to the df_smiles for easier viewing1
df_master_sorted <- df_master[order(-df_master$Tanimoto_coefficient),]
df_master_sorted <- df_master_sorted[!duplicated(df_master_sorted$PREFERRED.NAME), ]
#Removing duplicates from the dataframe - as 3 datasets are combined, overlapping is unavoidable
#Duplicates are removed based on presence in the PREFERRED.NAME column since the SMILES formats differ slightly between datasets but are still correctly interpreted.
View(df_master_sorted)
write.csv(df_master_sorted, file = "Tanimoto-coefficient-Rotenone-3.csv")
#Preparing a container for the calculated coefficient
for(row in 1:nrow(df_master)){
calculation<- ms.compute(molA, df_master[row,"SMILES"], standardize = TRUE, sim.method = "simple")
#This line repeats ms.compute for each row of df_smiles so that a comparison between Rotenone (=molA) and all other (available) pesticides (="SMILES") is made
#RxnSim also allows comparisons between each pesticide in a list by using the ms.compute.sim.matrix function.
Tanimoto_coefficient[row] <- calculation
}
df_master <- cbind (df_master,Tanimoto_coefficient)
#Tanimoto_coefficient is added to the df_smiles for easier viewing1
df_master_sorted <- df_master[order(-df_master$Tanimoto_coefficient),]
df_master_sorted <- df_master_sorted[!duplicated(df_master_sorted$PREFERRED.NAME), ]
#Removing duplicates from the dataframe - as 3 datasets are combined, overlapping is unavoidable
#Duplicates are removed based on presence in the PREFERRED.NAME column since the SMILES formats differ slightly between datasets but are still correctly interpreted.
View(df_master_sorted)
write.csv(df_master_sorted, file = "Tanimoto-coefficient-Rotenone-4.csv")
#Preparing a container for the calculated coefficient
for(row in 1:nrow(df_master)){
calculation<- ms.compute(molA, df_master[row,"SMILES"], standardize = TRUE, sim.method = "rodgerstanimoto")
#This line repeats ms.compute for each row of df_smiles so that a comparison between Rotenone (=molA) and all other (available) pesticides (="SMILES") is made
#RxnSim also allows comparisons between each pesticide in a list by using the ms.compute.sim.matrix function.
Tanimoto_coefficient[row] <- calculation
}
df_master <- cbind (df_master,Tanimoto_coefficient)
#Tanimoto_coefficient is added to the df_smiles for easier viewing1
df_master_sorted <- df_master[order(-df_master$Tanimoto_coefficient),]
df_master_sorted <- df_master_sorted[!duplicated(df_master_sorted$PREFERRED.NAME), ]
#Removing duplicates from the dataframe - as 3 datasets are combined, overlapping is unavoidable
#Duplicates are removed based on presence in the PREFERRED.NAME column since the SMILES formats differ slightly between datasets but are still correctly interpreted.
View(df_master_sorted)
write.csv(df_master_sorted, file = "Tanimoto-coefficient-Rotenone-5.csv")
#Preparing a container for the calculated coefficient
for(row in 1:nrow(df_master)){
calculation<- ms.compute(molA, df_master[row,"SMILES"], standardize = TRUE, fp.type = "standard" )
#This line repeats ms.compute for each row of df_smiles so that a comparison between Rotenone (=molA) and all other (available) pesticides (="SMILES") is made
#RxnSim also allows comparisons between each pesticide in a list by using the ms.compute.sim.matrix function.
Tanimoto_coefficient[row] <- calculation
}
df_master <- cbind (df_master,Tanimoto_coefficient)
#Tanimoto_coefficient is added to the df_smiles for easier viewing1
df_master_sorted <- df_master[order(-df_master$Tanimoto_coefficient),]
df_master_sorted <- df_master_sorted[!duplicated(df_master_sorted$PREFERRED.NAME), ]
#Removing duplicates from the dataframe - as 3 datasets are combined, overlapping is unavoidable
#Duplicates are removed based on presence in the PREFERRED.NAME column since the SMILES formats differ slightly between datasets but are still correctly interpreted.
View(df_master_sorted)
write.csv(df_master_sorted, file = "Tanimoto-coefficient-Rotenone-6.csv")
#Comments refer to the code above them.
#This script generates Tanimoto/Jaccard chemical similarity scores. Here, it is used to determine what molecules in the dataset are most chemically similar to a reference chemical.
sessionInfo()
install.packages("RxnSim")
#requires Rtools
install.packages("dplyr")
packages <- c("readr","dplyr","utils", "RxnSim", "ggplot2")
lapply(packages, library, character.only = TRUE)
#The previous 2 lines make it easier to load packages and libraries without needing to enter library() every time
epapcs <- read_csv("Chemical List EPAPCS-2022-04-11.csv")
pc_eup <- read_csv("PubChem_compound_list_ElW0fZMu9pLBvH6l_N03iWB0JxQ494ui8YeQ7uqWgu_qj74.csv")
pc_agr <- read_csv("PubChem_compound_list_o-QFwS1hSN1_90ruyJYDwlQ_i1-vbTmhQ4Qi7ViVMOxYjAw.csv")
#Importing datasets
epapcs <- select(epapcs, "PREFERRED NAME", "SMILES")
pc_eup <- select(pc_eup, "cmpdname", "isosmiles")
pc_agr <- select(pc_agr, "cmpdname", "isosmiles")
#Selecting relevant columns
epapcs <- na.omit(epapcs)
pc_eup <- na.omit(pc_eup)
pc_agr <- na.omit(pc_agr)
#Cleaning up dataset by removing all entries without SMILES
names(pc_eup)[1] <- "PREFERRED NAME"
names(pc_eup)[2] <- "SMILES"
names(pc_agr)[1] <- "PREFERRED NAME"
names(pc_agr)[2] <- "SMILES"
#Renaming columns to be consistent across datasets
df_master <- rbind(epapcs, pc_eup, pc_agr)
molA <- "[H][C@@]12COC3=C(C=C(OC)C(OC)=C3)[C@]1([H])C(=O)C1=CC=C3O[C@H](CC3=C1O2)C(C)=C"
#This is the SMILES for Rotenone; defining molA as another SMILES value allows for comparisons of all kinds of pesticides.
df_master <- data.frame(lapply(df_master, as.character), stringsAsFactors = FALSE)
#For some reason, the df is seen as tables, not characters. This function forces all values to be characters
df_master <- df_master[!duplicated(df_master$PREFERRED.NAME), ]
#Removing duplicate chemicals based on the PREFERRED.NAME column
Tanimoto_coefficient <- vector("numeric",nrow(df_master))
#Preparing a container for the calculated coefficient
for(row in 1:nrow(df_master)){
calculation<- ms.compute(molA, df_master[row,"SMILES"], standardize = TRUE)
#This line repeats ms.compute for each row of df_smiles so that a comparison between Rotenone (=molA) and all other (available) pesticides (="SMILES") is made
#RxnSim also allows comparisons between each pesticide in a list by using the ms.compute.sim.matrix function.
Tanimoto_coefficient[row] <- calculation
}
df_master <- cbind (df_master,Tanimoto_coefficient)
#Tanimoto_coefficient is added to the df_smiles for easier viewing
df_master_sorted <- df_master[order(-df_master$Tanimoto_coefficient),]
View(df_master_sorted)
write.csv(df_master_sorted, file = "Tanimoto-coefficient-Rotenone-1.csv")
#Exports df_smiles_sorted to a .csv file with observations sorted in descending order according to their Tanimoto coefficient.
preferred_name <- df_master[,1]
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))
p1
#indicate median in plot (can be used to indicate how similar the dataset is to rotenone overall)
#sorting is incorrect in plot maybe due to duplicate removal
install.packages("dplyr")
#indicate median in plot (can be used to indicate how similar the dataset is to rotenone overall)
median(df_master_sorted[,2])
#indicate median in plot (can be used to indicate how similar the dataset is to rotenone overall)
median(df_master_sorted[,3])
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+geom_col(mapping=aes(x=reorder(preferred_name,-Tanimoto_coefficient), y=median))
p1
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+geom_col(mapping=aes(x=reorder(preferred_name,-Tanimoto_coefficient), y=median))
p1
median <- median(df_master_sorted[,3])
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+geom_col(mapping=aes(x=reorder(preferred_name,-Tanimoto_coefficient), y=median))
p1
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+geom_col(mapping=aes(x=reorder(preferred_name,-Tanimoto_coefficient), y=median), fill = "red", color = "red")
p1
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+annotate("median", x=Null, y=median, color="red")
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+geom_point(data=median, col="red")
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+annotate("median", x=median, y=median, color="red")
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+geom_col(aes(x=median, y=median), color="red")
p1
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+geom_col(aes(x=median(nrow(df_master_sorted)), y=median), color="red")
p1
#median <- median(df_master_sorted[,3])
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+geom_col(aes(x=median(preferred_name), y=median(Tanimoto_coefficient)), color="red")
p1
#median <- median(df_master_sorted[,3])
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+geom_col(aes(x=median(nrow), y=median(Tanimoto_coefficient)), color="red")
p1
median <- median(df_master_sorted[,3])
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=median))
p1
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=median), color="red")
p1
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+geom_col(mapping=aes(x= 5, y=median), color="red")
p1
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+geom_col(mapping=aes(x= median(nrow(df_master_sorted)), y=median), color="red")
p1
#Comments refer to the code above them.
#This script generates Tanimoto/Jaccard chemical similarity scores. Here, it is used to determine what molecules in the dataset are most chemically similar to a reference chemical.
sessionInfo()
packages <- c("readr","dplyr","utils", "RxnSim", "ggplot2")
lapply(packages, library, character.only = TRUE)
epapcs <- read_csv("Data/Chemical List EPAPCS-2022-04-11.csv")
pc_eup <- read_csv("Data/PubChem_compound_list_ElW0fZMu9pLBvH6l_N03iWB0JxQ494ui8YeQ7uqWgu_qj74.csv")
pc_agr <- read_csv("Data/PubChem_compound_list_o-QFwS1hSN1_90ruyJYDwlQ_i1-vbTmhQ4Qi7ViVMOxYjAw.csv")
#Importing datasets
epapcs <- select(epapcs, "PREFERRED NAME", "SMILES")
pc_eup <- select(pc_eup, "cmpdname", "isosmiles")
pc_agr <- select(pc_agr, "cmpdname", "isosmiles")
epapcs <- na.omit(epapcs)
pc_eup <- na.omit(pc_eup)
pc_agr <- na.omit(pc_agr)
names(pc_eup)[1] <- "PREFERRED NAME"
names(pc_eup)[2] <- "SMILES"
names(pc_agr)[1] <- "PREFERRED NAME"
names(pc_agr)[2] <- "SMILES"
#Renaming columns to be consistent across datasets
df_master <- rbind(epapcs, pc_eup, pc_agr)
molA <- "[H][C@@]12COC3=C(C=C(OC)C(OC)=C3)[C@]1([H])C(=O)C1=CC=C3O[C@H](CC3=C1O2)C(C)=C"
#This is the SMILES for Rotenone; defining molA as another SMILES value allows for comparisons of all kinds of pesticides.
df_master <- data.frame(lapply(df_master, as.character), stringsAsFactors = FALSE)
#For some reason, the df is seen as tables, not characters. This function forces all values to be characters
df_master <- df_master[!duplicated(df_master$PREFERRED.NAME), ]
#Removing duplicate chemicals based on the PREFERRED.NAME column
Tanimoto_coefficient <- vector("numeric",nrow(df_master))
#Preparing a container for the calculated coefficient
for(row in 1:nrow(df_master)){
calculation<- ms.compute(molA, df_master[row,"SMILES"], standardize = TRUE)
#This line repeats ms.compute for each row of df_smiles so that a comparison between Rotenone (=molA) and all other (available) pesticides (="SMILES") is made
#RxnSim also allows comparisons between each pesticide in a list by using the ms.compute.sim.matrix function.
Tanimoto_coefficient[row] <- calculation
}
df_master <- cbind (df_master,Tanimoto_coefficient)
#Tanimoto_coefficient is added to the df_smiles for easier viewing
df_master_sorted <- df_master[order(-df_master$Tanimoto_coefficient),]
View(df_master_sorted)
#write.csv(df_master_sorted, file = "Tanimoto-coefficient-Rotenone-1.csv")
#Exports df_smiles_sorted to a .csv file with observations sorted in descending order according to their Tanimoto coefficient.
preferred_name <- df_master[,1]
#write.csv(df_master_sorted, file = "Tanimoto-coefficient-Rotenone-1.csv")
#Exports df_smiles_sorted to a .csv file with observations sorted in descending order according to their Tanimoto coefficient.
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))
p1
install.packages("svglite")
packages <- c("readr","dplyr","utils", "RxnSim", "ggplot2","svglite")
svg("Output/tanimoto-scores.svg")
write.csv(df_master_sorted, file = "Output/Tanimoto-coefficient-Rotenone.csv")
svglite("Output/tanimoto-scores.svg")
packages <- c("readr","dplyr","utils", "RxnSim", "ggplot2","svglite")
lapply(packages, library, character.only = TRUE)
svglite("Output/tanimoto-scores.svg")
svglite("Output/tanimoto-scores.svg")
p1
dev.off
#Exports df_smiles_sorted to a .csv file with observations sorted in descending order according to their Tanimoto coefficient.
p1 <- ggplot(data=df_master_sorted)+geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))
p1
#Exports df_smiles_sorted to a .csv file with observations sorted in descending order according to their Tanimoto coefficient.
p1 <- ggplot(data=df_master_sorted)+
geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+
theme_grey()+
svglite("Output/tanimoto-scores.svg")
#Exports df_smiles_sorted to a .csv file with observations sorted in descending order according to their Tanimoto coefficient.
p1 <- ggplot(data=df_master_sorted)+
geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+
theme_grey()
svglite("Output/tanimoto-scores.svg")
p1
dev.off
#Exports df_smiles_sorted to a .csv file with observations sorted in descending order according to their Tanimoto coefficient.
p1 <- ggplot(data=df_master_sorted)+
geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+
theme_grey()+
labs(x = "Pesticides", y="Tanimoto coefficient")
svglite("Output/tanimoto-scores.svg")
p1
dev.off
#Exports df_smiles_sorted to a .csv file with observations sorted in descending order according to their Tanimoto coefficient.
p1 <- ggplot(data=df_master_sorted)+
geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+
theme_grey()+
labs(x = "Pesticides", y="Tanimoto coefficient", caption = "Pesticides on x axis are reordered according to their Tanimoto coefficient")
p1
svglite("Output/tanimoto-scores.svg")
p1
dev.off
#The previous 2 lines make it easier to load packages and libraries without needing to enter library() every time
library(readr)
#Importing datasets
library(dplyr)
#Preparing a container for the calculated coefficient
library(RxnSim)
#Exports df_smiles_sorted to a .csv file with observations sorted in descending order according to their Tanimoto coefficient.
library(ggplot2)
library(svglite)
svglite("Output/tanimoto-scores.svg")
p1
dev.off
svglite("Output/tanimoto-scores.svg")
p1
dev.off()
p1 <- ggplot(data=df_master_sorted)+
geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+
theme_grey()+
labs(x = "Pesticides", y="Tanimoto coefficient", caption = "Pesticides on x axis are reordered according to their Tanimoto coefficient")+
axis.ticks.x=element_blank()
#Exports df_smiles_sorted to a .csv file with observations sorted in descending order according to their Tanimoto coefficient.
library(ggplot2)
p1 <- ggplot(data=df_master_sorted)+
geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+
theme_grey()+
labs(x = "Pesticides", y="Tanimoto coefficient", caption = "Pesticides on x axis are reordered according to their Tanimoto coefficient")+
axis.ticks.x=element_blank()
p1
p1 <- ggplot(data=df_master_sorted)+
geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+
theme_grey()+
labs(x = "Pesticides", y="Tanimoto coefficient", caption = "Pesticides on x axis are reordered according to their Tanimoto coefficient")+
theme(axis.ticks.x=element_blank())
p1
#Exports df_smiles_sorted to a .csv file with observations sorted in descending order according to their Tanimoto coefficient.
library(ggplot2)
p1 <- ggplot(data=df_master_sorted)+
geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+
theme_grey()+
theme(axis.labels.x=element_blank())+
labs(x = "Pesticides", y="Tanimoto coefficient")
p1
p1 <- ggplot(data=df_master_sorted)+
geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+
theme_grey()+
theme(axis.ticks.x=element_blank())+
labs(x = "Pesticides", y="Tanimoto coefficient")
p1
p1 <- ggplot(data=df_master_sorted)+
geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient))+
theme_grey()+
theme(axis.text.x=element_blank())+
labs(x = "Pesticides", y="Tanimoto coefficient")
p1
library(svglite)
svglite("Output/tanimoto-scores.svg")
p1
dev.off()
p1 <- ggplot(data=df_master_sorted)+
geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient),color="darkblue")+
theme_grey()+
theme(axis.text.x=element_blank())+
labs(x = "Pesticides", y="Tanimoto coefficient")
p1
p1 <- ggplot(data=df_master_sorted)+
geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient),color="blue")+
theme_grey()+
theme(axis.text.x=element_blank())+
labs(x = "Pesticides", y="Tanimoto coefficient")
p1
library(svglite)
p1 <- ggplot(data=df_master_sorted)+
geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient),color="darkslateblue")+
theme_grey()+
theme(axis.text.x=element_blank())+
labs(x = "Pesticides", y="Tanimoto coefficient")
p1
library(svglite)
svglite("Output/tanimoto-scores.svg")
p1
dev.off()
#Comments refer to the code above them.
#This script generates Tanimoto/Jaccard chemical similarity scores. Here, it is used to determine what molecules in the dataset are most chemically similar to a reference chemical.
sessionInfo()
library(readr)
epapcs <- read_csv("Data/Chemical List EPAPCS-2022-04-11.csv")
pc_eup <- read_csv("Data/PubChem_compound_list_ElW0fZMu9pLBvH6l_N03iWB0JxQ494ui8YeQ7uqWgu_qj74.csv")
pc_agr <- read_csv("Data/PubChem_compound_list_o-QFwS1hSN1_90ruyJYDwlQ_i1-vbTmhQ4Qi7ViVMOxYjAw.csv")
#Importing datasets
library(dplyr)
epapcs <- select(epapcs, "PREFERRED NAME", "SMILES")
pc_eup <- select(pc_eup, "cmpdname", "isosmiles")
pc_agr <- select(pc_agr, "cmpdname", "isosmiles")
epapcs <- na.omit(epapcs)
pc_eup <- na.omit(pc_eup)
pc_agr <- na.omit(pc_agr)
names(pc_eup)[1] <- "PREFERRED NAME"
names(pc_eup)[2] <- "SMILES"
names(pc_agr)[1] <- "PREFERRED NAME"
names(pc_agr)[2] <- "SMILES"
#Renaming columns to be consistent across datasets
df_master <- rbind(epapcs, pc_eup, pc_agr)
molA <- "[H][C@@]12COC3=C(C=C(OC)C(OC)=C3)[C@]1([H])C(=O)C1=CC=C3O[C@H](CC3=C1O2)C(C)=C"
#This is the SMILES for Rotenone; defining molA as another SMILES value allows for comparisons of all kinds of pesticides.
df_master <- data.frame(lapply(df_master, as.character), stringsAsFactors = FALSE)
#For some reason, the df is seen as tables, not characters. This function forces all values to be characters
df_master <- df_master[!duplicated(df_master$PREFERRED.NAME), ]
#Removing duplicate chemicals based on the PREFERRED.NAME column
Tanimoto_coefficient <- vector("numeric",nrow(df_master))
#Preparing a container for the calculated coefficient
library(RxnSim)
for(row in 1:nrow(df_master)){
calculation<- ms.compute(molA, df_master[row,"SMILES"], standardize = TRUE)
#This line repeats ms.compute for each row of df_smiles so that a comparison between Rotenone (=molA) and all other (available) pesticides (="SMILES") is made
#RxnSim also allows comparisons between each pesticide in a list by using the ms.compute.sim.matrix function.
Tanimoto_coefficient[row] <- calculation
}
df_master <- cbind (df_master,Tanimoto_coefficient)
#Tanimoto_coefficient is added to the df_smiles for easier viewing
df_master_sorted <- df_master[order(-df_master$Tanimoto_coefficient),]
write.csv(df_master_sorted, file = "Output/Tanimoto-coefficient-Rotenone.csv")
#Exports df_smiles_sorted to a .csv file with observations sorted in descending order according to their Tanimoto coefficient.
library(ggplot2)
p1 <- ggplot(data=df_master_sorted)+
geom_col(mapping=aes(x= reorder(preferred_name,-Tanimoto_coefficient), y=Tanimoto_coefficient),color="darkslateblue")+
theme_grey()+
theme(axis.text.x=element_blank())+
labs(x = "Pesticides", y="Tanimoto coefficient")
library(svglite)
svglite("Output/tanimoto-scores.svg")
p1
dev.off()
p1 <- ggplot(data=df_master_sorted)+
geom_col(mapping=aes(x= reorder(df_master_sorted$PREFERRED.NAME,-Tanimoto_coefficient), y=Tanimoto_coefficient),color="darkslateblue")+
theme_grey()+
theme(axis.text.x=element_blank())+
labs(x = "Pesticides", y="Tanimoto coefficient")
library(svglite)
svglite("Output/tanimoto-scores.svg")
p1
dev.off()
#This script generates Tanimoto/Jaccard chemical similarity scores. Here, it is used to determine what molecules in the dataset are most chemically similar to a reference chemical.
sessionInfo()
